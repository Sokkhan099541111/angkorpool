.is-flex-important {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.is-block {
  display: block !important;
}

.top-most-margin {
  margin-top: 20px !important;
}

.no-margin-bottom {
  margin-bottom: 0 !important;
}

.no-margin {
  margin: 0 !important;
}

.no-padding {
  padding: 0 !important;
}

.box .inner-wrapper {
  padding: 18px;
}

.flex-grow-0 {
  -webkit-box-flex: 0 !important;
      -ms-flex-positive: 0 !important;
          flex-grow: 0 !important;
}

.flex-grow-1 {
  -webkit-box-flex: 1 !important;
      -ms-flex-positive: 1 !important;
          flex-grow: 1 !important;
}

.flex-flow-column {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-flow: column;
          flex-flow: column;
}

.button-action-area {
  margin-top: 17px;
}

.full-width {
  width: 100%;
}

.full-height {
  height: 100%;
}

.is-flex-center-all {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.avatar-photo {
  border-radius: 50%;
}

.hide {
  display: none !important;
}

.border-bottom {
  border-bottom: solid 1px #dcdcdc;
}

.section {
  background: transparent;
}

.box {
  box-shadow: none;
  border: solid 1px #dcdcdc;
  background-color: #fff;
}

.fs-17-fw-800 {
  font-size: 17px !important;
  font-weight: 800 !important;
}

.fs-14 {
  font-size: 14px !important;
}

.text-muted-50 {
  color: #848484;
}

.text-muted {
  color: #afafaf;
}

.text-favorite {
  color: #e9d820 !important;
}

.rounded {
  border-radius: 50%;
}

.is-full-width-height {
  width: 100%;
  height: 100%;
}

.bg-white {
  background-color: #fff;
}

.bg-f3f3f3 {
  background-color: #f3f3f3;
}

.no-border {
  border: none !important;
}

.border-left {
  border-left: 1px solid #dbdbdb;
}

.border-right {
  border-right: 1px solid #dbdbdb;
}

.border-top {
  border-top: 1px solid #dbdbdb;
}

.border-bottom {
  border-bottom: 1px solid #dbdbdb;
}

.shadow20 {
  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2);
}

.text-shadow {
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.18);
}

.img-32x32 {
  width: 32px;
  height: 32px;
}

.z-index-1000 {
  z-index: 1000;
}

.border-radius-0 {
  border-radius: 0;
}

.border-top-left-radius-0 {
  border-top-left-radius: 0;
}

.border-top-right-radius-0 {
  border-top-right-radius: 0;
}

.table th {
  border-top: 0;
}

.nav-tabs .nav-link {
  color: #464a4c;
  opacity: 0.5;
}

.nav-tabs .nav-link.active,
.nav-tabs .nav-link:hover {
  opacity: 1;
}

.text-secondary {
  color: #50c0f0 !important;
}

a.text-secondary:hover {
  color: #13a3e0 !important;
}

.text-gray {
  color: #464a4c !important;
}

.width-min-200 {
  min-width: 200px !important;
}

.width-200 {
  width: 200px !important;
}

.font-weight-800 {
  font-weight: 800 !important;
}

.font-weight-600 {
  font-weight: 600 !important;
}

.font-weight-400 {
  font-weight: 400 !important;
}

.fs-17 {
  font-size: 17px !important;
}

.no-text-decoration {
  text-decoration: none;
}

.list-style-none {
  list-style: none;
}

.page-sidebar {
  background-color: #364150 !important;
  -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
          order: 1;
}

.page-sidebar.desktop {
  -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
          order: 1;
  width: 235px;
  margin-right: -235px;
  transition: margin 300ms ease-in-out;
}

.page-sidebar.desktop.open {
  margin-right: 0;
}

.page-sidebar.mobile {
  -webkit-box-ordinal-group: 1;
      -ms-flex-order: 0;
          order: 0;
  height: 0;
  overflow: hidden;
  transition: height 300ms ease-in-out;
}

.page-sidebar .nav-item {
  border-top: solid 1px #425062;
}

.page-sidebar .nav-item.active .nav-link,
.page-sidebar .nav-item:hover.active .nav-link {
  background-color: #50c0f0;
}

.page-sidebar .nav-item a.nav-link {
  color: #fff;
  padding: 15px 10px 15px 14px;
}

.page-sidebar .nav-item a.nav-link:hover {
  background-color: #3e4b5c;
}

.page-sidebar .nav-item a.nav-link > .fa {
  display: inline-block;
  width: 32px;
}

.page-sidebar .nav-item a.nav-link span {
  display: inline-block;
}

.page-sidebar .nav-item a.nav-link span.arrow {
  float: right;
}

.page-sidebar .nav-item:first-child {
  border: none;
}

.page-sidebar .nav-item .sub-menu {
  padding: 0;
  display: none;
  background-color: #323c4a;
}

.page-sidebar .nav-item .sub-menu.open {
  display: block;
}

.page-sidebar .nav-item .sub-menu a.nav-link {
  border: none;
  padding: 11px 0 11px 66px;
}

.profile .photo {
  height: 172px;
  width: 172px;
}

.profile .summary {
  padding: 12px;
  line-height: 1.5rem;
}

.profile .summary h1 {
  line-height: 3rem;
}

.profile .summary span i {
  width: 30px;
}

.experience .title,
.education .title {
  font-size: 21px;
  font-weight: 600;
}

.experience .company,
.experience .college,
.education .company,
.education .college {
  font-size: 16px;
  font-weight: 600;
}

.experience .period,
.experience .location,
.education .period,
.education .location {
  font-size: inherit;
  font-weight: 400;
}

.experience ul li,
.education ul li {
  margin-bottom: 15px;
}

.experience ul li:last-child,
.education ul li:last-child {
  margin-bottom: 0;
}

html {
  height: 100%;
}

body {
  font-family: "Montserrat";
  min-height: 100%;
  overflow-x: hidden;
}

@media (min-width: 0) and (max-width: 575px) {
  .container {
    width: 540px;
    max-width: 100%;
  }
}

.navbar {
  width: 100%;
  background: #fff !important;
}

.navbar .navbar-toggler {
  cursor: pointer;
  outline: none;
  height: 40px;
  width: 3.25rem;
  border: none;
}

.navbar .navbar-toggler span {
  background-color: #4a4a4a;
  display: block;
  width: 64%;
  height: 1px;
  left: 50%;
  margin-left: -16px;
  position: absolute;
  top: 50%;
}

.navbar .navbar-toggler span:nth-child(1) {
  margin-top: -9px;
}

.navbar .navbar-toggler span:nth-child(2) {
  margin-top: -1px;
}

.navbar .navbar-toggler span:nth-child(3) {
  margin-top: 8px;
}

.middle-wrapper > .content-wrapper {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

.collapse-menu {
  background-color: #fff;
}

footer {
  margin-top: 14px;
}

.alert {
  border-radius: 2px;
  border-width: 0;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.18);
}

.alert-success {
  background-color: #5dc09c;
  border-color: #4bb97e;
  color: #f0f9f6;
}

.alert-danger {
  background-color: #e7505a;
  border-color: #e43a61;
  color: #fff;
}

.btn {
  cursor: pointer;
}

.btn,
.btn:focus {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.18);
}

a.btn:focus.btn-secondary {
  color: #fff;
}

#employee-search-job-dash {
  height: 200px;
  background-size: cover;
  background-position: 0 0;
  background-color: rgba(0, 0, 0, 0.1);
  background-blend-mode: darken;
}

#employee-search-job-dash .subject {
  line-height: 73px;
  letter-spacing: 2px;
  font-weight: 800;
}

#employee-search-job-dash input {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.18);
  border: none;
  z-index: 3;
}

#employee-search-job-dash input {
  width: 400px;
}

#employee-search-job-dash select {
  width: 200px;
}

#employee-search-job-dash .btn {
  padding: 12px 49px;
  border: none !important;
  z-index: 0;
}

#job-search .filter {
  max-width: 270px;
  width: 270px;
}

#job-search .filter .card {
  border: none;
  background-color: transparent;
  border-top: solid 1px #ccc;
  border-radius: 0;
}

#job-search .filter .card .card-header {
  position: relative;
  background-color: transparent;
  border: none;
  padding-left: 0;
  padding-right: 0;
}

#job-search .filter .card .list-group-item {
  background-color: transparent;
  padding-left: 0;
  padding-right: 0;
}

#job-search .filter .card a {
  color: #292b2c;
  font-weight: 600;
  text-decoration: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

#job-search .filter .card a .flex-1 {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

#job-search .filter .card a .icon-collapse {
  font-size: 12px;
}

#job-search .result {
  -webkit-box-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

#job-search .box-result .inner-wrapper {
  position: relative;
  border-bottom: 1px solid #dbdbdb;
}

#job-search .box-result .inner-wrapper:last-child {
  border-bottom: none;
}

#job-search .box-result .inner-wrapper .title {
  font-size: 1.2rem;
}

#job-search .box-result .inner-wrapper .description {
  font-size: 0.9rem;
}

#job-search .box-result .inner-wrapper .btn-apply {
  position: absolute;
  right: 0;
  bottom: 0;
  text-transform: uppercase;
  text-decoration: none;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */